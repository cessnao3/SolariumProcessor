; Define the hard-reset vector location
.loadloc start

; Define the soft-reset vector location
.loadloc start

.oper 0x2000
:functest
ldi $ret, 97
ret

; Define the starting location
.oper 0x4000
:start
ldn $sp
.load 0x400

; Setup the counter variables
ldi 6, 1
ldi 7, 0
ldi 13, 0
ldi 15, 100

; Setup the target value
jmpri load_data

:target_value
.load 32767 ; 0x7FFF

:load_data
ldri 8, target_value

; Load the function call test
ldri 15, 2
jmpri 2
.loadloc functest
call 15
cpy $ret, 12

; Perform the addition and check for reaching the target
:loop
add 7, 6, 7
int 0
sub 9, 8, 7

; Jump back to the add instruction if the
; target minus current is greater than zero
tgs 9, 13
jmpri loop
jmpri endloc

; Otherwise, enter an infinite loop as program completion
:endloc
jmpri endloc
