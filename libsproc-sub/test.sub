static auto[10] INPUT;

func init_input()
{
    auto loc = &INPUT;
    (loc + 0) := 199;
    (loc + 1) := 200;
    (loc + 2) := 208;
    (loc + 3) := 210;
    (loc + 4) := 200;
    (loc + 5) := 207;
    (loc + 6) := 240;
    (loc + 7) := 269;
    (loc + 8) := 260;
    (loc + 9) := 263;
}

func run_part_1(input, size)
{
    auto count = 0;
    auto index = 1;

    while (index < size)
    {
        auto ind = input + index;
        auto last = *(ind - 1);
        auto val = *ind;

        if (val > last)
        {
            count = count + 1;
        }

        index = index + 1;
    }

    return count;
}

func run_part_2(input, size)
{
    auto new_buffer_loc = 0x8000;
    auto index = 2;

    auto a1 = *(input);
    auto a2 = *(input + 1);

    while (index < size)
    {
        auto current = *(input + index);
        (new_buffer_loc + (index - 2)) := a1 + (a2 + current);
        a1 = a2;
        a2 = current;
        index = index + 1;
    }

    return run_part_1(new_buffer_loc, size - 2);
}

func main()
{
    init_input();
    return run_part_2(&INPUT, 10);
}
